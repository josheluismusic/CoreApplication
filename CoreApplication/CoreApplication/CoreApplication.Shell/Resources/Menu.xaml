<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <!--default-->
    <FontFamily x:Key="MenuFontFamily">Titillium Web</FontFamily>
    <system:Double x:Key="MenuFontSizeTopLevel">18</system:Double>
    <system:Double x:Key="MenuFontSizeSubmenu">16</system:Double>
    <SolidColorBrush x:Key="MenuBackgroundColor">#C0C0C0</SolidColorBrush>
    <SolidColorBrush x:Key="MenuForegroundColor">#000000</SolidColorBrush>
    <SolidColorBrush x:Key="MenuHoverBackgroundColor">#000000</SolidColorBrush>
    <SolidColorBrush x:Key="MenuHoverForegroundColor">#FFFFFF</SolidColorBrush>

    <!--botón scroll-->
    <Style x:Key="MenuScrollButton"
           TargetType="{x:Type RepeatButton}"
           BasedOn="{x:Null}">
        <Setter Property="ClickMode" Value="Hover"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Padding="10"
                            Background="{DynamicResource MenuBackgroundColor}">
                        <ContentPresenter x:Name="ContentContainer"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
    <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>

    <!--scroll-->
    <Style x:Key="MenuScrollViewer"
           TargetType="{x:Type ScrollViewer}"
           BasedOn="{x:Null}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Row="1"/>
                        <RepeatButton Style="{StaticResource MenuScrollButton}"
                                      Grid.Row="0"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="False">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="0">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ComputedVerticalScrollBarVisibility"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="VerticalOffset"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ExtentHeight"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ViewportHeight"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource UpArrow}"
                                  Fill="{DynamicResource MenuForegroundColor}"/>
                        </RepeatButton>
                        <RepeatButton Style="{StaticResource MenuScrollButton}"
                                      Grid.Row="2"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="False">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="100">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ComputedVerticalScrollBarVisibility"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="VerticalOffset"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ExtentHeight"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ViewportHeight"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource DownArrow}"
                                  Fill="{DynamicResource MenuForegroundColor}"/>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TopLevelHeader -->
    <ControlTemplate x:Key="MenuTopLevelHeaderTemplate"
                     TargetType="{x:Type MenuItem}">
        <Border x:Name="Border"
                Padding="10"
                Background="{DynamicResource MenuBackgroundColor}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter Grid.Column="0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  ContentSource="Header"/>
                <Path x:Name="Arrow"
                      Grid.Column="1"
                      Margin="10,0,0,0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Opacity="0.5"
                      Data="{StaticResource DownArrow}"
                      Fill="{DynamicResource MenuForegroundColor}"/>
                <Popup x:Name="Popup"
                       Placement="Bottom"
                       HorizontalOffset="-10"
                       VerticalOffset="10"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       AllowsTransparency="True"
                       Focusable="False"
                       PopupAnimation="Fade">
                    <ScrollViewer CanContentScroll="True"
                                  Style="{StaticResource MenuScrollViewer}">
                        <StackPanel IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </ScrollViewer>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MenuForegroundColor}"/>
                <Setter Property="FontSize" Value="{DynamicResource MenuFontSizeTopLevel}"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MenuHoverForegroundColor}"/>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuHoverBackgroundColor}"/>
                <Setter TargetName="Arrow" Property="Opacity" Value="1"/>
                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource MenuHoverForegroundColor}"/>
            </Trigger>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="MenuButtonTopLevelHeaderTemplate"
                     TargetType="{x:Type MenuItem}">
        <Border x:Name="Border"
                Padding="5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter ContentSource="Icon"
                                  Width="38"
                                  Height="38"/>
                <Path x:Name="Arrow"
                      Grid.Column="1"
                      Margin="5,0,0,0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Opacity="0.5"
                      Data="{StaticResource DownArrow}"
                      Fill="{DynamicResource MenuForegroundColor}"/>
                <Popup x:Name="Popup"
                       Placement="Bottom"
                       HorizontalOffset="-5"
                       VerticalOffset="5"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       AllowsTransparency="True"
                       Focusable="False"
                       PopupAnimation="Fade">
                    <ScrollViewer CanContentScroll="True"
                                  Style="{StaticResource MenuScrollViewer}">
                        <StackPanel IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </ScrollViewer>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MenuForegroundColor}"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MenuHoverForegroundColor}"/>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuHoverBackgroundColor}"/>
                <Setter TargetName="Arrow" Property="Opacity" Value="1"/>
                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource MenuHoverForegroundColor}"/>
            </Trigger>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- TopLevelItem -->
    <ControlTemplate x:Key="MenuTopLevelItemTemplate"
                     TargetType="{x:Type MenuItem}">
        <Border x:Name="Border"
                Padding="10"
                Background="{DynamicResource MenuBackgroundColor}">
            <ContentPresenter ContentSource="Header"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MenuForegroundColor}"/>
                <Setter Property="FontSize" Value="{DynamicResource MenuFontSizeTopLevel}"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MenuHoverForegroundColor}"/>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuHoverBackgroundColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="MenuButtonTopLevelItemTemplate"
                     TargetType="{x:Type MenuItem}">
        <Border x:Name="Border"
                Padding="5"
                Background="{DynamicResource MenuBackgroundColor}">
            <ContentPresenter ContentSource="Icon"
                              Width="38"
                              Height="38"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MenuForegroundColor}"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MenuHoverForegroundColor}"/>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuHoverBackgroundColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuHeader -->
    <ControlTemplate x:Key="MenuSubmenuHeaderTemplate"
                     TargetType="{x:Type MenuItem}">
        <Border x:Name="Border"
                Padding="0,2,0,2"
                Background="{DynamicResource MenuBackgroundColor}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <Border Grid.Column="1"
                        Padding="5,0,5,0">
                    <ContentPresenter ContentSource="Header"/>
                </Border>
                <Path x:Name="Arrow"
                      Grid.Column="2"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Opacity="0.5"
                      Data="{StaticResource RightArrow}"
                      Fill="{DynamicResource MenuForegroundColor}"/>
                <Popup x:Name="Popup"
                       Placement="Right"
                       VerticalOffset="-2"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       AllowsTransparency="True"
                       Focusable="False"
                       PopupAnimation="Fade">
                    <ScrollViewer CanContentScroll="True"
                                  Style="{StaticResource MenuScrollViewer}">
                        <StackPanel IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </ScrollViewer>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MenuForegroundColor}"/>
                <Setter Property="FontSize" Value="{DynamicResource MenuFontSizeSubmenu}"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MenuHoverForegroundColor}"/>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuHoverBackgroundColor}"/>
                <Setter TargetName="Arrow" Property="Opacity" Value="1"/>
                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource MenuHoverForegroundColor}"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True"/>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="MenuSearchSubmenuHeaderTemplate"
                     TargetType="{x:Type MenuItem}">
        <Border x:Name="Border"
                Padding="5"
                Background="{DynamicResource MenuHoverBackgroundColor}">
            <Grid>
                <ContentPresenter ContentSource="Header"/>
                <Popup x:Name="Popup"
                       Placement="Bottom"
                       VerticalOffset="5"
                       HorizontalOffset="-5"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       AllowsTransparency="True"
                       Focusable="False"
                       PopupAnimation="Fade">
                    <ScrollViewer CanContentScroll="True"
                                  MinWidth="210"
                                  Style="{StaticResource MenuScrollViewer}">
                        <StackPanel IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle">
                        </StackPanel>
                    </ScrollViewer>
                </Popup>
            </Grid>
        </Border>
    </ControlTemplate>

    <!-- SubmenuItem -->
    <ControlTemplate x:Key="SubmenuItemTemplate"
                     TargetType="{x:Type MenuItem}">
        <Border x:Name="Border"
                Padding="0,2,0,2"
                Background="{DynamicResource MenuBackgroundColor}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <Border Grid.Column="1" Padding="5,0,5,0">
                    <ContentPresenter ContentSource="Header"/>
                </Border>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.Command" Value="{x:Null}"/>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MenuForegroundColor}"/>
                <Setter Property="FontSize" Value="{DynamicResource MenuFontSizeSubmenu}"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MenuHoverForegroundColor}"/>
                <Setter Property="Background" TargetName="Border" Value="{DynamicResource MenuHoverBackgroundColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--ítem de menú-->
    <Style x:Key="{x:Type MenuItem}"
           TargetType="{x:Type MenuItem}">
        <Setter Property="Header" Value="{Binding Title}"/>
        <Setter Property="ItemsSource" Value="{Binding SubMenuItems}"/>
        <Setter Property="Command" Value="{Binding Command}"/>
        <Setter Property="CommandParameter" Value="{Binding CommandArg}"/>
    </Style>

    <Style x:Key="MenuItemStyle"
           TargetType="{x:Type MenuItem}"
           BasedOn="{StaticResource {x:Type MenuItem}}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{DynamicResource MenuTopLevelHeaderTemplate}"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{DynamicResource MenuTopLevelItemTemplate}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{DynamicResource MenuSubmenuHeaderTemplate}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{DynamicResource SubmenuItemTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MenuButtonItemStyle"
           TargetType="{x:Type MenuItem}"
           BasedOn="{StaticResource {x:Type MenuItem}}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{DynamicResource MenuButtonTopLevelHeaderTemplate}"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{DynamicResource MenuButtonTopLevelItemTemplate}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{DynamicResource MenuSubmenuHeaderTemplate}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{DynamicResource SubmenuItemTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--menú-->
    <Style x:Key="MenuStyle"
           TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FontFamily" Value="{StaticResource MenuFontFamily}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <ItemsPresenter SnapsToDevicePixels="True"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource MenuItemStyle}"/>
    </Style>

    <Style x:Key="MenuButtonStyle"
           TargetType="{x:Type Menu}"
           BasedOn="{StaticResource MenuStyle}">
        <Setter Property="ItemContainerStyle" Value="{DynamicResource MenuButtonItemStyle}"/>
    </Style>

</ResourceDictionary>
